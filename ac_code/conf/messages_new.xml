<?xml version="1.0"?>
<!DOCTYPE protocol SYSTEM "messages.dtd">
<protocol>

 <msg_class name="ac">

 <!--AC_cmd:-->
  <message name="BIND_RC" id="1">
    <description> link="A2R" request check result
                  check rc bind_state broadcast serial code and ack
    </description>
    <field name="serial_code"   type="uint8[10]"/>
  </message>
  

 <!--AC_state:-->
  <message name="AIRCRAFT_BIND_STATE" id="101">   <!--edit 160612-->
    <description> link="broadcast" 
                  message broadcase between xbee communication initial and binded
    </description>
    <field name="serial_code"   type="char[10]"/>
    <field name="ac_sn"         type="char[12]"/>
  </message>

  <message name="AIRCRAFT_INFO_STATE" id="102">
    <description> link="A2G",after binded,send serial number autopilot software and so on
                  engine_type : 1 = Electricity , 2 = Fuel, 3 = Hybrid
                  misc_status: bit0:joystick-enable  bit1: u-blox_enable 
    </description> 
    <field name="engine_type" type="uint8"/>
    <field name="max_voyage" type="uint16" unit="m"/>
    <field name="battery_capacity" type="int32" unit="mAh"/>
    <field name="pesticides_capacity" type="int16" unit="0.1L"/>
    <field name="spray_wide"   type="uint16" unit="cm"/>
    <field name="spray_height" type="uint16" unit="cm"/>
    <field name="max_flight_height"   type="uint16" unit="cm"/> 
    <field name="spray_concentration"   type="uint16" unit="ml/1000m2"/>
    <field name="atomization_grade" type="uint8"/>              
    <field name="max_flight_speed"   type="uint16" unit="cm/s"/>
    <field name="spray_flight_speed"   type="uint16" unit="cm/s"/>
    <field name="ac_sn"     type="char[12]"/>  
    <field name="ac_sv"     type="char[25]"/>        
    <field name="ops_sn"    type="char[25]"/>  
    <field name="bbox_sn"   type="char[25]"/>
    <field name="misc_status"   type="uint8"/> 
  </message>

  <message name="HEART_BEAT_AC_GCS_STATE" id="103">          <!--edit 160612-->
    <description>link="A2G" ,request GCS check time_out of HB message to determine AC is lost
                 flight_status:
                         bit1: 0=ac_unready;         1=ac_ready
                         bit2: 0=motors_locked;      1=motors_unlocked
                         bit3: 0=on_ground;          1=in_flight
			 bit4: 0=manual_mode;        1=auto_mode                         
			 bit5: 0=back_home;          1=others
                         bit6: 0=take_off;           1=others			 			 
			 bit7: 0=landing;            1=others
                         bit8: 0=spray_stop;         1=spray_open
		         reserve other bits keep 0

                 error_code: respect emergency states,bit1 to bit32, not used bits reserve 0	
                         emergency state     bit(0=ok, 1=error)
                         BAT_LOW              1     (able to back home)
			 BAT_CRITICAL         2     (can't continual flight)
			 BAT_OTHERS           3
			 IMU_MOMENTARY        4
                         IMU_MAG_EMI          5
			 IMU_CRITICAL         6
			 HEIGHT_SONAR         7
			 HEIGHT_BARO          8
			 HEIGHT_BOTH          9
			 BOARD_TEMP           10
			 BOARD_OUT            11
			 GCS_COM_LOST         12    (communication lost)
			 RC_COM_LOST          13
			 GPS_ACC              14    (gps pos precision)
			 GPS_LOST             15
			 OPS_EMPTY            16
			 OPS_LOST             17 
			 LIFT_POWER           18
			 TASK_RUNOVER         19
			 TASK_PARSE           20
			 TASK_BREAK           21    (auto_task break)
			 MODE_CONVERT_A2M     22    (mode convert to manual,auto_task break)	
                         reserve other bits keep 0	
                  selftest_code: express ac power on selftest information
                         high8bit  1=battery_check;  2=board_check;  3=imu_check;  4=baro_check;   5=ops_check;   
                                   6=gps_check;	     7=calibration;  8=ap_check;   9=link_check
                         low8bit   0=pass   others=error
    </description>
    <field name="sys_time" type="uint16" unit="s"/>
    <field name="link_gcs_quality" type="uint8" unit="percent"/>  <!--reserve-->
    <field name="link_rc_quality" type="uint8" unit="percent"/>   <!--reserve-->
    <field name="link_ac_quality" type="uint8" unit="percent"/>   <!--reserve-->
    <field name="command_status" type="uint8"/>  <!--gcs_cmd  value: none=0; start=1; pause=2; continual=3; back_home=4; reserve_land=5; direct_land=6-->     
    <field name="flight_status" type="uint16"/>              
    <field name="heading" type="float" unit="deg"/>
    <field name="speed" type="int16" unit="cm/s"/>
    <field name="flight_alt" type="int16" unit="cm"/>
    <field name="pos_lng" type="int32" unit="e8,rad"/>    
    <field name="pos_lat" type="int32" unit="e8,rad"/>    
    <field name="battery_remain"  type="int8"  unit="percent"/>
    <field name="pesticides_remain" type="int8" unit="percent"/>   
    <field name="error_code" type="uint32"/>
    <field name="selftest_code" type="uint16"/>
  </message>

  <message name="CURRENT_TASK_STATE" id="104">
    <description>link="A2G"
                 state: reached=1(arriving at wp_current_id); passed=2(aready pass wp_current_id,flight to next wp);
    </description>
    <field name="sys_time" type="uint16" unit="s"/>
    <field name="wp_current_id" type="uint8"/>
    <field name="wp_action" type="uint8"/>
    <field name="state" type="uint8"/>
    <field name="nb_unexecuted_wp" type="uint8"/>
  </message>

  <message name="TASK_ACK_STATE" id="105">
    <description>link="A2G" use to ack the gcs task messages
                 task_ack_type: add = 0, update = 1, delete = 2, get = 3;
                 response  0=success, others=error_code
    </description>
    <field name="task_code" type="uint8"/>
    <field name="task_ack_type" type="uint8"/>
    <field name="response" type="int8"/>    
  </message>

  <message name="GET_TASK_ACK_STATE" id="106">
    <description>link="A2G" use to ack the gcs "GET_TASK" messages
                 wp_type: coordinate   wgs84 = 1, relative_ENU = 2
    </description>
    <field name="task_code" type="uint8"/>
    <field name="wp_type"  type="uint8"/>
    <field name="wp_start_id" type="uint8"/>
    <field name="wp_end_id" type="uint8"/>    
    <field name="wp_action" type="uint8[]"/>
    <field name="waypoints_lon" type="int32[]" unit="e8,rad"/>  
    <field name="waypoints_lat" type="int32[]" unit="e8,rad"/>  
  </message>
  
  <!--edit 160612-->
  <!--message name="EXCEPTION_TASK_STATE" id="107"> 
    <description>link="A2G" 
                 exception_task_type:  hover=1, home=2, land_reserve=3, land_force=4, run_out=5
                 (exception error_code is sended by heart_beat msg)
                 emergency trigger 
    </description>
    <field name="sys_time" type="uint16" unit="s"/>
    <field name="exception_task_type" type="uint8"/>
  </message-->

  <!--edit 160612-->
  <!--message name="MANUAL_TASK_STATE" id="108">
    <description>link="A2G" 
                    locked =1;             unlocker =2;
		    take_off =3;           land=4
		    hover =5;              hold =6
		    forward =7;            backward =8;
		    rightward =9;          leftward =10;
		    climb =11;             decline =12;
		    turn_right =13;        turn_left =14;
		    home =15;              stop_home =16;
		    set_manual =17;        set_auto =18;
		    spray_add =19;         spray_descend =20;
                 spray_grade: 0-5
                 if aircraft in manual_mode, it will trigger.
    </description>
    <field name="sys_time" type="uint16" unit="s"/>
    <field name="manual_task_type" type="uint8"/>
    <field name="spray_grade" type="uint8"/>   
  </message-->

  <message name="SET_COMMAND_ACK_STATE" id="109"> 
    <description>link="A2G" use to ack the gcs SET_COMMAND messages 
                 response  0=success, others=error_code
    </description>
    <field name="command_id" type="uint8"/>
    <field name="command_value" type="uint8"/>
    <field name="response"     type="int8"/>    
  </message>

  <message name="HEART_BEAT_AC_RC_STATE" id="110">
    <description>link="A2R" ,use ack RC heartbeat message
                 period=1s if battery/pesticides parameter=-1,meant get the information fail
                 last_response=response of message "RC_SET_CMD_ACK_STATE"
                 use ack AC heart_beat message
    </description>
    <field name="sys_time" type="uint16" unit="s"/>
    <field name="ac_state" type="uint8" values="ground|flight"/>
    <field name="flight_mode"       type="uint8" values="kill|manual|auto"/>
    <field name="battery_remain"  type="uint8"  unit="percent"/>
    <field name="pesticides_remain" type="uint8" unit="percent"/>
    <field name="pesticides_threshold"   type="uint8"/>
    <field name="home_state"        type="uint8" values="stop_home|home"/>
    <field name="lock_state"        type="uint8" values="unlocked|locked"/>
    <field name="ac_ready"          type="uint8" values="unready|ready"/>
    <field name="error_code"        type="uint8" />
    <field name="alert_grade"       type="uint8" values="ok|low|medium|high"/>
    <field name="spray_state"       type="uint8" values="stop|open" />
  </message>

  <message name="LAND_TASK_ACK_STATE" id="111">
    <description>link="A2G" use to ack the gcs task messages
                 response  0=success, others=error_code
    </description>
    <field name="operation_type" type="uint8"/>
    <field name="response" type="int8"/>    
  </message>

  <message name="EMERGENCY_RECORD_STATE" id="112">  <!--edit 160612-->
    <description>link="A2G" use to ack the gcs task messages
                 wp_type: coordinate   wgs84 = 1, relative_ENU = 2
                 spray_status: spraying=1, stop_spraying=2
                 send continual until gcs ack "EMERGENCY_RECORD_ACK_STATE" message
    </description>
    <field name="wp_type"  type="uint8"/>
    <field name="spray_status" type="uint8"/>
    <field name="waypoints_lon" type="int32" unit="e8,rad"/>  
    <field name="waypoints_lat" type="int32" unit="e8,rad"/>    
  </message>

  <message name="CALIBRATION_AC_RC_STATE" id="113">
    <description>link="A2R" use ack RC calibration cmd message
                 calibration_ack   get set cmd=0,  calibrate success=1, calibrate fail=2
    </description>
    <field name="calibration_ack" type="uint8"/>
  </message>
  
  <message name="AIRCRAFT_BIND_ACK_STATE" id="114">  <!--edit 160612-->
    <description> link="A2G" 
                  message use to ack gcs bind result,
                  response: 0=fail, 1=success
    </description>
    <field name="response"   type="uint8"/>
  </message>


  <!--message name="DATA_TEST" id="200">
    <description>link="A2G"
    </description>
    <field name="u8" type="uint8"/>
    <field name="s8" type="int8"/>
    <field name="u16" type="uint16"/>
    <field name="s16" type="int16"/>
    <field name="u32" type="uint32"/>
    <field name="s32" type="int32"/>
    <field name="f" type="float"/>
    <field name="s3" type="int8[]"/>
    <field name="f3" type="float[]"/>
  </message-->

  <message name="UPGRADE_RESPONSE" id="221">
    <description>link="A2G"
    Request upgrade response.
    type: AC=1, OPS=2, BBOX=3
    state: OK=0, BUSY=2,3,4.
    </description>
    <field name="type" type="uint8"/>
    <field name="state" type="uint8"/>
  </message>

  <message name="UPGRADE_STATUS" id="222">
    <description>link="A2G"
    AC upgrade status ready ok.
    type: AC=1, OPS=2, BBOX=3
    </description>
    <field name="type" type="uint8"/>
  </message>

  <message name="REQUESET_FIRMWARE" id="224">
    <description>link="A2G"
    AC request fireware data:
    type: AC=1, OPS=2, BBOX=3
    frame: Current_frame=1, Next_frame=2
    </description>
    <field name="type" type="uint8"/>
    <field name="frame" type="uint8"/>
  </message>

  <message name="UPGRADE_RESULT" id="225">
    <description>link="A2G"
    AC upgrade success or fail.
    type: AC=1, OPS=2, BBOX=3
    status: Success=0, Fail=1
    </description>
    <field name="type" type="uint8"/>
    <field name="status" type="uint8"/>
  </message>

  
 </msg_class>


 <msg_class name="gcs">
  
  <!--GCS_cmd:-->
  <message name="SET_CONFIG" id="1">  <!--edit 160612-->
    <description>link="G2A" 0:all info; 1:spray_height,cm(uint16); 2:spray_wide(uint16),cm; 3:spray_concentration(uint16),ml/1000m2; 
      4:spray_speed(uint16),cm/s; 5:max_flight_speed(uint16),cm/s; 6:max_flight_height(uint16),cm; 7:atomization_grade(uint8), 1-2-3...
      8:joystick_enable(uint8_t) 1=enable,0=disable 9:u-blox_enable(uint8_t) 1=enable,0=disable;
                 aircraft will ack "AIRCRAFT_INFO_STATE" message
    </description>
    <field name="parameter_id" type="uint8"/>
    <field name="parameter_value" type="int8[]"/>
  </message>  

  <message name="SET_COMMAND" id="2">
    <description>link="G2A" id:1=gcs_cmd  value: start=1; pause=2; continual=3; back_home=4; reserve_land=5; direct_land=6; lock_motors=7
                               2=request "AIRCRAFT_INFO_STATE" message, value=null  aircraft will ack with "SET_COMMAND_ACK_STATE" message
                               3=delete all task(if AC in_flight,gived gcs_cmd=pause before delete)
                               4=ops self clean(value: start=1; stop=0)
                               5=ops channel control, bit of value express the channel, eg.0x0F set four channels open
    </description>
    <field name="command_id" type="uint8"/>
    <field name="command_value" type="uint8"/>
  </message>
  
  <message name="ADD_TASK" id="3">
    <description>link="G2A" wp_action  flight_line=1; spray_line=2; spray_convert=3;  hovering=4; termination=5;
                 wp_type: coordinate   wgs84 = 1, relative_ENU = 2
                 aircraft will ack with "TASK_ACK_STATE" message using task_code
    </description>
    <field name="task_code" type="uint8"/>
    <field name="wp_type"  type="uint8"/>
    <field name="wp_start_id" type="uint8"/>
    <field name="wp_end_id" type="uint8"/>    
    <field name="wp_action" type="uint8[]"/>
    <field name="waypoints_lon" type="int32[]" unit="e8,rad"/>  
    <field name="waypoints_lat" type="int32[]" unit="e8,rad"/>  
  </message>

  <message name="UPDATE_TASK" id="4">
    <description>link="G2A" wp_action  flight_line=1; spray_line=2; spray_convert=3;  hovering=4; termination=5;
                 //update_type: only_update_action=1, only_update_pos=2, update_both=3;
                 wp_type: coordinate   wgs84 = 1, relative_ENU = 2
                 aircraft will ack with "TASK_ACK_STATE" message using task_code
    </description>
    <field name="task_code" type="uint8"/>
    <field name="update_type" type="uint8"/>
    <field name="wp_type"  type="uint8"/>
    <field name="wp_start_id" type="uint8"/>
    <field name="wp_end_id" type="uint8"/>    
    <field name="wp_action" type="uint8[]"/>
    <field name="waypoints_lon" type="int32[]" unit="e8,rad"/>  
    <field name="waypoints_lat" type="int32[]" unit="e8,rad"/>  
  </message>

  <message name="DELETE_TASK" id="5">
    <description>link="G2A"
                 aircraft will ack with "TASK_ACK_STATE" message using task_code
    </description>
    <field name="task_code" type="uint8"/>
    <field name="wp_start_id" type="uint8"/>
    <field name="wp_end_id" type="uint8"/>   
  </message>

  <message name="GET_TASK" id="6">
    <description>link="G2A" 
                 aircraft will ack with "GET_TASK_ACK_STATE" message using task_code
    </description>
    <field name="task_code" type="uint8"/>
    <field name="wp_start_id" type="uint8"/>
    <field name="wp_end_id" type="uint8"/>   
  </message>

  <message name="BIND_AIRCRAFT" id="7">   <!--edit 160612-->
    <description>link="G2A"
                aircraft will ack with "AIRCRAFT_INFO_STATE" message
    </description>
    <field name="serial_code" type="char[10]"/>
    <field name="sn_code"       type="char[12]"/>
  </message>

  <message name="LAND_TASK" id="8">
    <description>link="G2A"
                 operation_type: add=1, update=2(all update), delete=3(all delete)
                 land_type: home=1, reserve_land=2     
                 wp_type: coordinate   wgs84 = 1, relative_ENU = 2            
                 aircraft will ack with "LAND_TASK_ACK_STATE" message
                 note:home waypoint is requested and unique, reserve_land waypoints are optional(numbers:0--5)
    </description>
    <field name="operation_type" type="uint8"/>
    <field name="wp_type"  type="uint8"/>
    <field name="land_type" type="uint8[]"/>
    <field name="waypoints_lon" type="int32[]" unit="e8,rad"/>  
    <field name="waypoints_lat" type="int32[]" unit="e8,rad"/> 
  </message>

										  
<!--GCS_state:-->
  <message name="HEART_BEAT_GCS_STATE" id="101">
    <description>link="G2A"
                 when gcs lost ac_heart_beat message,it will trigger
    </description>
    <field name="reserve" type="uint8"/>
  </message> 

  <message name="EMERGENCY_RECORD_ACK_STATE" id="102">  <!--edit 160612-->
    <description>link="G2A"
                 when gcs success get "EMERGENCY_RECORD_STATE" msg ,ack AC with it
                 response  0=success, others=error_code
    </description>
    <field name="response" type="uint8"/>
  </message>

<!--Virtual RC functions-->
    <message name="HEART_BEAT_VRC_STATE" id="200">
	<description>link="G2A"
	</description>
	<field name="signal" type="uint8"/>
    </message>

  <message name="GCS_VRC_MOTION_CMD" id="201">
    <description>link="G2A", no ack
                <!--byte1  forward/backward control, 0-125:up       -125-0:down-->
		<!--byte2  right/left control,       0-125:right    -125-0:left-->
		<!--byte3  up/down control,          0-125:up       -125-0:down-->
		<!--byte4  CW/CCW control,           0-125:right    -125-0:left-->
    </description>
    <field name="motion_cmd"  type="uint32"/>
  </message>
  
  <message name="GCS_VRC_SET_CMD" id="202">
    <description>link="G2A", no ack
         <!--         flight_mode:        set_auto  =0x10;    set_manual =0x01   -->
         <!--         spray control:      open_spray=0x20;    stop_spray =0x02   -->
         <!--         VTOL  control:      take_off  =0x30;    land       =0x03   -->
         <!--         home_mode:          home      =0x40;    stop_home  =0x04   -->
         <!--reserve  mainpower control:  mainpower_on=0x50;  mainpower_off=0x05 -->
         <!--         lock control:       unlock=0x60;        lock=0x06          -->       
         <!--reserve  calibration:        calibrate_begin =0x70; calibrate_end = 0x07 -->
         
    </description>
    <field name="set_cmd"  type="uint8"/>
  </message>


  <message name="REQUEST_UPGRADE" id="221">
    <description>link="G2A"
    Request upgrade AC firmware.
    type: AC=1, OPS=2, BBOX=3
    </description>
    <field name="type" type="uint8"/>
  </message>

  <message name="QUERY_UPGRADE_STATUS" id="222">
    <description>link="G2A"
    Query module firmware upgrade status:
    type: AC=1, OPS=2, BBOX=3
    </description>
    <field name="type" type="uint8"/>
  </message>

  <message name="GCS_READY_OK" id="223">
    <description>link="G2A"
    GCS upgrade ready ok:
    type: AC=1, OPS=2, BBOX=3
    </description>
    <field name="type" type="uint8"/>
  </message>

  <message name="GCS_SEND_FIRMWARE" id="224">
    <description>link="G2A"
    Send a frame data:
    type: AC=1, OPS=2, BBOX=3
    data: default a frame firmware data length is 140.
    </description>
    <field name="type" type="uint8"/>
    <field name="data" type="uint8[]"/>
  </message>

  <message name="END_UPGRADE" id="225">
    <description>link="G2A"
    GCS end firmware upgrade:
    DATA1:type: AC=1, OPS=2, BBOX=3
    DATA2:bin checksum high byte
    DATA3:bin checksum low byte
    DATA4:bin length msb_1
    DATA5:bin length 2
    DATA6:bin length 3
    DATA7:bin length lsb_4
    </description>
    <field name="type" type="uint8"/>
    <field name="check_data" type="uint8[7]"/>
  </message>
 </msg_class>


 <msg_class name="rc">

  <!--RC_cmd:-->
  <message name="RC_MOTION_CMD" id="1">
    <description>link="R2A"
         <!--8bits:abcd efgh                     -->
         <!-- abcd=0001: virtical control        -->
         <!-- abcd=0010: for/back_ward control   -->
         <!-- abcd=0100: right/left_side control -->
         <!-- abcd=1000: rotation control        -->
         <!-- abcd=0000: horizontal control stop -->
         <!-- ef=01    : present orientation (up,  forward, right,clockwise)       -->
         <!-- ef=10    : present orientation (down,backward,left, counterclockwise)-->
         <!-- ef=00    : present orientation (stop status)                         -->
         <!-- gh=xx    : present control speed grade(00/01)                  -->
         <!--forward  00100101 0x25-->  
         <!--backward 00101001 0x29--> 
         <!--right    01000101 0x45--> 
         <!--left     01001001 0x49--> 
         <!--up       00010101 0x15--> 
         <!--down     00011001 0x19--> 
         <!--stop     00010000 0x10--> 
         <!--r_turn   10000101 0x85--> 
         <!--l_turn   10001001 0x89--> 
         <!--hover    00000000 0x00 --> 
    </description>
    <field name="motion_cmd"  type="uint8"/>
  </message>
  
  <message name="RC_SET_CMD" id="2">
    <description>link="R2A"
         <!--reserve  flight_mode:        set_auto  =0x10;    set_manual =0x01   -->
         <!--change   spray control:      add_spray=0x20;     reduce_spray =0x02 -->
         <!--keep     VTOL  control:      (take_off  =0x30;)  land       =0x03   -->
         <!--keep     home_mode:          home      =0x40;    stop_home  =0x04   -->
         <!--reserve  mainpower control:  mainpower_on=0x50;  mainpower_off=0x05 -->
         <!--add      lock control:       unlock=0x60;        lock=0x06          -->       
         <!--mag      calibration:        calibrate_begin =0x70; calibrate_end = 0x07                      -->
         
    </description>
    <field name="set_cmd"  type="uint8"/>
  </message>


  <!--RC_state:-->
  <message name="RC_BIND_STATE" id="101">
    <description>link="broadcase" 
    </description>
    <field name="serial_code"   type="char[10]"/>
  </message>
  
  <message name="HEART_BEAT_RC_STATE" id="102">
    <description>link="R2A"
    </description>
    <field name="signal" type="uint8"/>
  </message>

  <message name="CALIBRATION_RESULT_RC_ACK_STATE" id="103">
    <description>link="R2A"
                 ack  success=1
    </description>
    <field name="ack" type="uint8"/>
  </message>
  
 </msg_class>



 <msg_class name="lc">

  <message name="LC_BIND_STATE" id="101">
    <description>link="broadcase" 
    </description>
    <field name="serial_code"   type="uint8[10]"/>
  </message>
  
  <message name="HEART_BEAT_LC_STATE" id="102">
    <description>link="R2A"
    </description>
    <field name="signal" type="uint16"/>
  </message>
  
 </msg_class>
</protocol>
